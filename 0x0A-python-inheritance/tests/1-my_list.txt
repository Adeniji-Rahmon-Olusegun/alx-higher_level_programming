>>> MyList = __import__('1-my_list').MyList
>>> print(issubclass(MyList, list))
True
>>> print(issubclass(list, MyList))
False
>>> my_list = MyList()
>>> isinstance(my_list, list)
True
>>> my_list.append(8)
>>> my_list.append(1)
>>> my_list.append(6)
>>> my_list.append(0)
>>> my_list.append(-4)
>>> my_list.append("inf")
>>> my_list.append(int('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: 'inf'
>>> my_list.append(1)
>>> my_list.clear()
>>> my_list.append(0)
>>> my_list.append(0)
>>> my_list.append(0)
>>> my_list.append(0)
>>> my_list.print_sorted()
[0, 0, 0, 0]
>>> my_list.append(10000000000000000000000000000000000000000000)
>>> my_list.print_sorted()
[0, 0, 0, 0, 10000000000000000000000000000000000000000000]
>>> my_list.append(None)
>>> my_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x0A-python-inheritance/1-my_list.py", line 9, in print_sorted
    print(sorted(self))
TypeError: '<' not supported between instances of 'NoneType' and 'int'
>>> my_list.append(NULL)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'NULL' is not defined
