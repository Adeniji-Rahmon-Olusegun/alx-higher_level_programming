>>> add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
98
>>> print(add_integer(100.3, 100.2))
200
>>> print(add_integer(-100.3, -34))
-134
>>> print(add_integer(100.3, -34))
66
>>> print(add_integer(100.3))
198
>>> print(add_integer())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> print(add_integer('b'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 15, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> print(add_integer('b', 'c'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 15, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> print(add_integer(float('inf'), -2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 20, in add_integer
    a = int(a)
OverflowError: cannot convert float infinity to integer
>>> print(add_integer(4, float('nan')))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
    b = int(b)
ValueError: cannot convert float NaN to integer
